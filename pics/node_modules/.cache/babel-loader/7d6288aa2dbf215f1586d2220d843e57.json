{"ast":null,"code":"var _jsxFileName = \"/Users/james_cameron-mowat/pics/src/components/SearchBar.js\";\nimport React from 'react'; // class based because we are using state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      term: ''\n    };\n\n    this.onFormSubmit = event => {\n      event.preventDefault(); // this will be our search term\n      // this function requires arrow notation to find 'this' properly\n      //console.log(this.state.term);\n      // reference the prop in app.js using class components\n\n      props.onSubmit;\n    };\n  }\n\n  // leaving parentheses off inputChange function call for use later, instead of each rendering\n  // we then refactored the event using a state term, in the process updating our state\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onFormSubmit,\n        className: \"ui form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Image Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.term,\n            onChange: e => this.setState({\n              term: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/james_cameron-mowat/pics/src/components/SearchBar.js"],"names":["React","SearchBar","Component","state","term","onFormSubmit","event","preventDefault","props","onSubmit","render","e","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAgBxCC,KAhBwC,GAgBhC;AAACC,MAAAA,IAAI,EAAG;AAAR,KAhBgC;;AAAA,SAmBxCC,YAnBwC,GAmBxBC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN,GADyB,CAGzB;AACA;AACA;AAEA;;AACAC,MAAAA,KAAK,CAACC,QAAN;AACA,KA5BuC;AAAA;;AA8BxC;AACA;AACCC,EAAAA,MAAM,GAAE;AACP,wBACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACC;AAAM,QAAA,QAAQ,EAAE,KAAKL,YAArB;AAAmC,QAAA,SAAS,EAAC,SAA7C;AAAA,+BACC;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEC;AACA,YAAA,IAAI,EAAC,MADL;AAEA,YAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAFlB;AAGA,YAAA,QAAQ,EAAGO,CAAD,IAAO,KAAKC,QAAL,CAAc;AAACR,cAAAA,IAAI,EAAEO,CAAC,CAACE,MAAF,CAASC;AAAhB,aAAd;AAHjB;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAaA;;AA9CsC;;AAiDxC,eAAeb,SAAf","sourcesContent":["import React from 'react';\n\n// class based because we are using state\nclass SearchBar extends React.Component {\n\n// called each time the user types anything\n// could also be handleInputChange (it is also just a name, and could be anything)\n// a normal listener which we make 'controlled' not 'uncontrolled'\n\t// onInputChange(event){\n\t// \tconsole.log(event.target.value);\n\t// }\n\n// click listener\n\t// onInputClick(){\n\t// \tconsole.log('Input was clicked');\n\t// }\n\n// Why do this?\n// \nstate = {term : ''};\n\n// form event handler - Keeps browser from submitting automatically\nonFormSubmit = (event) => {\n\tevent.preventDefault();\n\n\t// this will be our search term\n\t// this function requires arrow notation to find 'this' properly\n\t//console.log(this.state.term);\n\n\t// reference the prop in app.js using class components\n\tprops.onSubmit\n}\n\n// leaving parentheses off inputChange function call for use later, instead of each rendering\n// we then refactored the event using a state term, in the process updating our state\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"ui segment\">\n\t\t\t\t<form onSubmit={this.onFormSubmit} className=\"ui form\">\n\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t<label>Image Search</label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={this.state.term}\n\t\t\t\t\t\tonChange={(e) => this.setState({term: e.target.value})}/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}