{"ast":null,"code":"var _jsxFileName = \"/Users/james_cameron-mowat/Documents/React Apps/songs/src/components/songList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // importing action creator\n\nimport { selectSong } from '../actions'; // class based component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SongList extends React.Component {\n  renderList() {\n    // take our song list, map and return a list of jsx\n    return this.props.songs.map(song => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right floated content\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button primary\",\n            onClick: () => this.props.selectSong(song),\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 6\n        }, this)]\n      }, song.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this);\n    });\n  }\n\n  render() {\n    // this.props === {songs: state.songs} the two are equal\n    //console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui divided list\",\n      children: this.renderList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this);\n  }\n\n} // Note: this code will be the same, repeated over and over throughout your career\n// always import connect, always the bring in the React component, always mapStateToProps, always export the connect function\n// take state object (all data in the store) run computation to make that data into props and show it inside our component\n// this is the conventional name\n\n\nconst mapStateToProps = state => {\n  // the selected song\n  console.log(state); // you will now be able to see our state object\n  // console.log(state);\n\n  return {\n    songs: state.songs\n  }; // everytime we click a button this will rerun\n}; // integrate connect with SongList\n// connect is a function returning a function\n// hence this syntax\n// mapStateToProps passed in so we can access the songs\n\n\nexport default connect(mapStateToProps, // es2015 shortening syntax, the equivalent of selectSong: selectSong\n// separate passed object for selectSong component, passed in as a prop for this component\n{\n  selectSong\n})(SongList); // songlist class passed into connect","map":{"version":3,"sources":["/Users/james_cameron-mowat/Documents/React Apps/songs/src/components/songList.js"],"names":["React","connect","selectSong","SongList","Component","renderList","props","songs","map","song","title","render","mapStateToProps","state","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,UAAT,QAA2B,YAA3B,C,CAEA;;;;AACA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAEtCC,EAAAA,UAAU,GAAE;AACX;AACA,WAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IAAU;AACrC,0BACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,iCACC;AACC,YAAA,SAAS,EAAC,mBADX;AAEC,YAAA,OAAO,EAAE,MAAM,KAAKH,KAAL,CAAWJ,UAAX,CAAsBO,IAAtB,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eASC;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,oBACEA,IAAI,CAACC;AADP;AAAA;AAAA;AAAA;AAAA,gBATD;AAAA,SAA2BD,IAAI,CAACC,KAAhC;AAAA;AAAA;AAAA;AAAA,cADD;AAeA,KAhBM,CAAP;AAiBA;;AAEDC,EAAAA,MAAM,GAAE;AACP;AACA;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBAAkC,KAAKN,UAAL;AAAlC;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AA3BqC,C,CA8BvC;AACA;AAEA;AACA;;;AACA,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAClC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFkC,CAGlC;AACA;;AACA,SAAO;AACNN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADP,GAAP,CALkC,CAQlC;AACA,CATD,C,CAWA;AACA;AACA;AACA;;;AACA,eAAeN,OAAO,CACrBW,eADqB,EAErB;AACA;AACA;AAAEV,EAAAA;AAAF,CAJqB,CAAP,CAKZC,QALY,CAAf,C,CAKc","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n// importing action creator\nimport { selectSong } from '../actions';\n\n// class based component\nclass SongList extends React.Component {\n\n\trenderList(){\n\t\t// take our song list, map and return a list of jsx\n\t\treturn this.props.songs.map((song) => {\n\t\t\treturn (\n\t\t\t\t<div className=\"item\" key={song.title}>\n\t\t\t\t\t<div className=\"right floated content\">\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclassName=\"ui button primary\"\n\t\t\t\t\t\t\tonClick={() => this.props.selectSong(song)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSelect\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t{song.title}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trender(){\n\t\t// this.props === {songs: state.songs} the two are equal\n\t\t//console.log(this.props);\n\t\treturn <div className=\"ui divided list\">{this.renderList()}</div>;\n\t}\n}\n\n// Note: this code will be the same, repeated over and over throughout your career\n// always import connect, always the bring in the React component, always mapStateToProps, always export the connect function\n\n// take state object (all data in the store) run computation to make that data into props and show it inside our component\n// this is the conventional name\nconst mapStateToProps = (state) => {\n\t// the selected song\n\tconsole.log(state);\n\t// you will now be able to see our state object\n\t// console.log(state);\n\treturn {\n\t\tsongs: state.songs\n\t};\n\t// everytime we click a button this will rerun\n};\n\n// integrate connect with SongList\n// connect is a function returning a function\n// hence this syntax\n// mapStateToProps passed in so we can access the songs\nexport default connect(\n\tmapStateToProps,\n\t// es2015 shortening syntax, the equivalent of selectSong: selectSong\n\t// separate passed object for selectSong component, passed in as a prop for this component\n\t{ selectSong }\n\t)(SongList); // songlist class passed into connect"]},"metadata":{},"sourceType":"module"}