{"ast":null,"code":"import jsonPlaceholder from '../apis/jsonPlaceholder'; // action creator, this makes the api request\n\nexport const fetchPosts = () => {\n  // bad approach!!! the normal way is not how we do this\n  const promise = jsonPlaceholder.get('/posts'); // this is not an action, as it is turned into ES2015 by the DOM\n  // the async await syntax is actually a lot more code than we see here\n  // when you see it translated with Babel, therefore this will not work with redux, because\n  // it expects a plain old js object\n\n  return {\n    type: 'FETCH_POSTS',\n    payload: promise\n  };\n}; // alternatively, we could change the response name to a promise and get rid\n// of the async await syntax, however this still won't work in the way you would expect\n// the redux cycle happens much quicker than the request to the server does, so the data will not \n// be there by the time the redux cycle is ready to update the state at the end of the cycle\n// the answer to this problem = middleware","map":{"version":3,"sources":["/Users/james_cameron-mowat/Documents/React Apps/blog/src/actions/index.js"],"names":["jsonPlaceholder","fetchPosts","promise","get","type","payload"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,yBAA5B,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B;AACA,QAAMC,OAAO,GAAGF,eAAe,CAACG,GAAhB,CAAoB,QAApB,CAAhB,CAF4B,CAG5B;AACA;AACA;AACA;;AACA,SAAO;AACHC,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH,CAXM,C,CAaP;AACA;AACA;AACA;AAEA","sourcesContent":["import jsonPlaceholder from '../apis/jsonPlaceholder';\n\n// action creator, this makes the api request\nexport const fetchPosts = () => {\n    // bad approach!!! the normal way is not how we do this\n    const promise = jsonPlaceholder.get('/posts');\n    // this is not an action, as it is turned into ES2015 by the DOM\n    // the async await syntax is actually a lot more code than we see here\n    // when you see it translated with Babel, therefore this will not work with redux, because\n    // it expects a plain old js object\n    return {\n        type: 'FETCH_POSTS',\n        payload: promise\n    };\n};\n\n// alternatively, we could change the response name to a promise and get rid\n// of the async await syntax, however this still won't work in the way you would expect\n// the redux cycle happens much quicker than the request to the server does, so the data will not \n// be there by the time the redux cycle is ready to update the state at the end of the cycle\n\n// the answer to this problem = middleware\n"]},"metadata":{},"sourceType":"module"}