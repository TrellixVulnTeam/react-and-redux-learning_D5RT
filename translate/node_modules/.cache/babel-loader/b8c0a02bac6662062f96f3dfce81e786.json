{"ast":null,"code":"var _jsxFileName = \"/Users/james_cameron-mowat/Documents/React Apps/translate/src/components/Button.js\";\nimport React from 'react';\nimport LanguageContext from '../contexts/LanguageContext';\nimport ColorContext from '../contexts/ColorContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Button extends React.Component {\n  // adding in context to a class component\n  // 'contextType' is a very special property name\n  // static adds a property to the class itself\n  // static contextType = LanguageContext;\n  // this is essentially the same as writing\n  // Button.contextType = LanguageContext;\n  // when we use a consumer we do not have to specify a context type\n  render() {\n    // accessing the context data\n    // console.log(this.context);\n    // const text = this.context === 'english' ? 'Submit' : 'Voorleggen'; \n    // consumers inserted here\n    // it needs one child which always needs to be a function\n    // the consumer react component will automatically invoke the function inside it\n    return /*#__PURE__*/_jsxDEV(ColorContext.Consumer, {\n      children: color => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `ui button ${color}`,\n        children: /*#__PURE__*/_jsxDEV(LanguageContext.Consumer, {\n          children: ({\n            language\n          }) => language === 'english' ? 'Submit' : 'Voorleggen'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Button;","map":{"version":3,"sources":["/Users/james_cameron-mowat/Documents/React Apps/translate/src/components/Button.js"],"names":["React","LanguageContext","ColorContext","Button","Component","render","color","language"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACjC;AACA;AACA;AACA;AAEA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAE;AACJ;AACA;AACA;AAEA;AACA;AACA;AACA,wBACI,QAAC,YAAD,CAAc,QAAd;AAAA,gBACMC,KAAD,iBACG;AAAQ,QAAA,SAAS,EAAG,aAAYA,KAAM,EAAtC;AAAA,+BACA,QAAC,eAAD,CAAiB,QAAjB;AAAA,oBACK,CAAC;AAACC,YAAAA;AAAD,WAAD,KAAgBA,QAAQ,KAAK,SAAb,GAAyB,QAAzB,GAAoC;AADzD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA9BgC;;AAiCrC,eAAeJ,MAAf","sourcesContent":["import React from 'react';\nimport LanguageContext from '../contexts/LanguageContext';\nimport ColorContext from '../contexts/ColorContext';\n\nclass Button extends React.Component {\n    // adding in context to a class component\n    // 'contextType' is a very special property name\n    // static adds a property to the class itself\n    // static contextType = LanguageContext;\n\n    // this is essentially the same as writing\n    // Button.contextType = LanguageContext;\n    // when we use a consumer we do not have to specify a context type\n\n    render(){\n        // accessing the context data\n        // console.log(this.context);\n        // const text = this.context === 'english' ? 'Submit' : 'Voorleggen'; \n        \n        // consumers inserted here\n        // it needs one child which always needs to be a function\n        // the consumer react component will automatically invoke the function inside it\n        return (\n            <ColorContext.Consumer>\n                {(color) => \n                    <button className={`ui button ${color}`}>\n                    <LanguageContext.Consumer>\n                        {({language}) => language === 'english' ? 'Submit' : 'Voorleggen'}\n                    </LanguageContext.Consumer>\n                </button>\n                }\n                \n            </ColorContext.Consumer>\n        );\n    }\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}