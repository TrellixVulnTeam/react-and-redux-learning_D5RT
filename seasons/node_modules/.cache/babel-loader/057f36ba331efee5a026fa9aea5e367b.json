{"ast":null,"code":"var _jsxFileName = \"/Users/james_cameron-mowat/seasons/src/SeasonDisplay.js\";\nimport React from 'react'; // configuration object\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst seasonConfig = {\n  summer: {\n    text: 'Lets hit the beach!',\n    iconName: 'sun'\n  },\n  winter: {\n    text: 'Burr, it is cold!',\n    iconName: 'snowflake'\n  }\n};\n\nconst getSeason = (lat, month) => {\n  // if it is the summer\n  if (month > 2 && month < 9) {\n    // and we are in the northern hemisphere return 'summer'\n    // else return 'winter'\n    return lat > 0 ? 'summer' : 'winter';\n  } else {\n    // if we are in the southern hemisphere return summer else winter\n    return lat > 0 ? 'winter' : 'summer';\n  }\n}; // prop\n\n\nconst SeasonDisplay = props => {\n  const season = getSeason(props.lat, new Date().getMonth()); // refatored ternary expressions\n  // const text = season === 'winter' ? 'Burr, it is chilly' : 'Lets hit the beach';\n  // const icon = season === 'winter' ? 'snowflake' : 'sun';\n\n  const {\n    text,\n    iconName\n  } = seasonConfig[season]; // { text, iconName}\n  // using ES6 style\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: `${iconName} icon`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: `${iconName} icon`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_c = SeasonDisplay;\nexport default SeasonDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeasonDisplay\");","map":{"version":3,"sources":["/Users/james_cameron-mowat/seasons/src/SeasonDisplay.js"],"names":["React","seasonConfig","summer","text","iconName","winter","getSeason","lat","month","SeasonDisplay","props","season","Date","getMonth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;;AACA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,MAAM,EAAE;AACPC,IAAAA,IAAI,EAAE,qBADC;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GADY;AAKpBC,EAAAA,MAAM,EAAE;AACPF,IAAAA,IAAI,EAAE,mBADC;AAEPC,IAAAA,QAAQ,EAAE;AAFH;AALY,CAArB;;AAWA,MAAME,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACjC;AACA,MAAGA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAxB,EAA0B;AACzB;AACA;AACA,WAAOD,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACA,GAJD,MAIO;AACN;AACA,WAAOA,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACA;AACD,CAVD,C,CAYA;;;AACA,MAAME,aAAa,GAAIC,KAAD,IAAW;AAChC,QAAMC,MAAM,GAAGL,SAAS,CAACI,KAAK,CAACH,GAAP,EAAY,IAAIK,IAAJ,GAAWC,QAAX,EAAZ,CAAxB,CADgC,CAGhC;AACA;AACA;;AACA,QAAM;AAAEV,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBH,YAAY,CAACU,MAAD,CAAvC,CANgC,CAMgB;AAGhD;;AACA,sBACC;AAAA,4BACC;AAAG,MAAA,SAAS,EAAG,GAAEP,QAAS;AAA1B;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAG,MAAA,SAAS,EAAG,GAAEC,QAAS;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAjBD;;KAAMK,a;AAmBN,eAAeA,aAAf","sourcesContent":["import React from 'react';\n\n\n// configuration object\nconst seasonConfig = {\n\tsummer: {\n\t\ttext: 'Lets hit the beach!',\n\t\ticonName: 'sun'\n\t},\n\twinter: {\n\t\ttext: 'Burr, it is cold!',\n\t\ticonName: 'snowflake'\n\t}\n};\n\nconst getSeason = (lat, month) => {\n\t// if it is the summer\n\tif(month > 2 && month < 9){\n\t\t// and we are in the northern hemisphere return 'summer'\n\t\t// else return 'winter'\n\t\treturn lat > 0 ? 'summer' : 'winter';\n\t} else {\n\t\t// if we are in the southern hemisphere return summer else winter\n\t\treturn lat > 0 ? 'winter' : 'summer';\n\t}\n};\n\n// prop\nconst SeasonDisplay = (props) => {\n\tconst season = getSeason(props.lat, new Date().getMonth());\n\n\t// refatored ternary expressions\n\t// const text = season === 'winter' ? 'Burr, it is chilly' : 'Lets hit the beach';\n\t// const icon = season === 'winter' ? 'snowflake' : 'sun';\n\tconst { text, iconName } = seasonConfig[season] // { text, iconName}\n\n\n\t// using ES6 style\n\treturn (\n\t\t<div> \n\t\t\t<i className={`${iconName} icon`}/>\n\t\t\t<h1>{text}</h1>\n\t\t\t<i className={`${iconName} icon`}/>\n\t\t</div>\n\t);\n};\n\nexport default SeasonDisplay;"]},"metadata":{},"sourceType":"module"}