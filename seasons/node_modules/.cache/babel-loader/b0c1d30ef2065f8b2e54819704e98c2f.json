{"ast":null,"code":"var _jsxFileName = \"/Users/james_cameron-mowat/seasons/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (module.hot) {\n  module.hot.accept();\n} // functional component\n//const App = () => {\n// geolocation api activation retrieving user location\n//window.navigator.geolocation.getCurrentPosition(\n// success\n//(position) => console.log(position),\n// failure\n//(err) => console.log(err)\n//);\n//return <div>Latitude: </div>;\n//};\n// class based component expects methods from a sub class\n// we need this to handle asynchronous operations (compiling html before we recieve our current position)\n// getting geolocation, success, error\n// react says we have to define render\n\n\nclass App extends React.Component {\n  // when an instance of this class is created\n  // this constructor is called before anything else\n  // it makes it a good place to initialise state\n  constructor(props) {\n    // we are overriding the subclass, super with props makes sure that the parent is also called\n    super(props);\n    this.state = {\n      lat: null\n    }; // state object default initialised\n\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude\n      });\n    }, err => console.log(err));\n  }\n\n  render() {\n    // this is called very frequently so we move get current position() into the constructor\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Latitude: \", this.state.lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 17\n}, this), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/james_cameron-mowat/seasons/src/index.js"],"names":["React","ReactDOM","module","hot","accept","App","Component","constructor","props","state","lat","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","console","log","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,IAAIC,MAAM,CAACC,GAAX,EAAgB;AACdD,EAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX;AACD,C,CAED;AACA;AACC;AACA;AACC;AACA;AACA;AACA;AACD;AAGA;AACD;AAEA;AACA;AACA;AAEA;;;AACA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AACjC;AACA;AACA;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB;AACA,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAb,CAHiB,CAGS;;AAC1BC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACOC,QAAD,IAAc;AACb,WAAKC,QAAL,CAAc;AAACN,QAAAA,GAAG,EAAEK,QAAQ,CAACE,MAAT,CAAgBC;AAAtB,OAAd;AACA,KAHP,EAIOC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJf;AAMA;;AAEAG,EAAAA,MAAM,GAAG;AAAE;AACT,wBAAO;AAAA,+BAAgB,KAAKb,KAAL,CAAWC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAlB+B;;AAqBlCT,QAAQ,CAACqB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n// functional component\n//const App = () => {\n\t// geolocation api activation retrieving user location\n\t//window.navigator.geolocation.getCurrentPosition(\n\t\t// success\n\t\t//(position) => console.log(position),\n\t\t// failure\n\t\t//(err) => console.log(err)\n\t//);\n\n\n\t//return <div>Latitude: </div>;\n//};\n\n// class based component expects methods from a sub class\n// we need this to handle asynchronous operations (compiling html before we recieve our current position)\n// getting geolocation, success, error\n\n// react says we have to define render\nclass App extends React.Component {\n\t// when an instance of this class is created\n\t// this constructor is called before anything else\n\t// it makes it a good place to initialise state\n\tconstructor(props){\n\t\t// we are overriding the subclass, super with props makes sure that the parent is also called\n\t\tsuper(props);\n\t\tthis.state = {lat: null}; // state object default initialised\n\t\twindow.navigator.geolocation.getCurrentPosition(\n      \t\t(position) => {\n      \t\t\tthis.setState({lat: position.coords.latitude})\n      \t\t},\n      \t\t(err) => console.log(err)\n    \t);\n\t}\n\n  render() { // this is called very frequently so we move get current position() into the constructor\n    return <div>Latitude: {this.state.lat}</div>;\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));"]},"metadata":{},"sourceType":"module"}